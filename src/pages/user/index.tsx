import Navbar from "~/components/navbar";
import { api } from "~/utils/api";
import Head from "next/head";
import { useRouter } from "next/router";
import { type User } from "@prisma/client";
import { useUser } from "@clerk/nextjs";
import { SignInButton } from "@clerk/nextjs";

const UserDisplay = (user: User) => {
  const groupsQuery = api.user.getAllGroups.useQuery();

  if (groupsQuery.isError) {
    throw groupsQuery.error;
  }
  if (!groupsQuery.isSuccess) {
    return <div>Loading...</div>;
  }

  if (!groupsQuery.data) {
    return <div>No groups found</div>;
  }

  const groups = groupsQuery.data;

  //get group of user
  let group = groups.find((group) => group.id === user.userGroupId);

  if (!group) {
    group = {
      id: "no",
      name: "No group",
      createdAt: new Date(),
      updatedAt: new Date(),
      description: "No group",
    };
  }

  let role = user.role.toString().toLocaleLowerCase();
  let primaryInstrument = user.primaryInstrument.toString().toLocaleLowerCase();

  role = role.replace(/(\w)(\w*)/g, function (g0, g1: string, g2: string) {
    return g1.toUpperCase() + g2.toLowerCase();
  });

  primaryInstrument = primaryInstrument.replace(
    /(\w)(\w*)/g,
    function (g0, g1: string, g2: string) {
      return g1.toUpperCase() + g2.toLowerCase();
    }
  );

  return (
    <div className="text-white ">
      <h1>
        {user.displayName} ({user.lastName ? user.lastName : ""},{" "}
        {user.firstName ? user.firstName : ""})
      </h1>
      <h3>{user.email}</h3>
      <p>{role}</p>
      <p>{primaryInstrument}</p>
      <p>{group.name}</p>
    </div>
  );
};

const AdminDashboard = () => {
  const usersQuery = api.user.getAll.useQuery();

  if (usersQuery.isError) {
    throw usersQuery.error;
  }
  if (!usersQuery.isSuccess) {
    return <div>Loading...</div>;
  }

  if (!usersQuery.data) {
    return <div>No users found</div>;
  }

  const users = usersQuery.data as User[];

  return (
    <>
      <Head>
        <title>Admin Dashboard</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex justify-center">
        <div className="flex flex-col justify-center">
          <h1 className="text-center text-4xl">Admin Dashboard</h1>
          <div className="flex justify-center">
            <div className="flex flex-col justify-center">
              <h2 className="text-center text-2xl">Users</h2>
              <div className="flex flex-col justify-center">
                {users.map((user) => (
                  <UserDisplay key={user.clerkId} {...user} />
                ))}
              </div>
            </div>
          </div>
        </div>
      </main>
    </>
  );
};

const UserPage = () => {
  //get current user
  const userQuery = api.user.getSelf.useQuery();
  const router = useRouter();
  const { isSignedIn } = useUser();

  if (!isSignedIn) {
    //if not redirect to home page
    // eslint-disable-next-line @typescript-eslint/no-floating-promises
    return (
      <div>
        <h1>Not signed in</h1>
        <SignInButton />
      </div>
    );
  }

  if (userQuery.isSuccess) {
    if (!userQuery.data) {
      //if not redirect to register page
      // eslint-disable-next-line @typescript-eslint/no-floating-promises
      router.push("/register");
    }
  }

  const user = userQuery.data;
  if (!user) {
    // eslint-disable-next-line @typescript-eslint/no-floating-promises
    router.push("/userSync");
    return <div>Redirecting...</div>;
  }

  return (
    <>
      <Head>
        <title>{user.displayName + "'s page"}</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex justify-center">
        <div className="w-full bg-red-100 md:max-w-2xl">
          <Navbar />
          <div className="flex justify-center">
            <div className="flex flex-col justify-center">
              <h1 className="text-center text-4xl">{user.displayName}</h1>
              <h2 className="text-center text-2xl">{user.email}</h2>
              {user.role == "ADMIN" && <AdminDashboard />}
            </div>
          </div>
        </div>
      </main>
    </>
  );
};
export default UserPage;
